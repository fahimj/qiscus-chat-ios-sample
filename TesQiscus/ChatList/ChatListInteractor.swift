//
//  ChatListInteractor.swift
//  TesQiscus
//
//  Created by Fahim Jatmiko on 12/02/20.
//  Copyright (c) 2020 Fahim. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import QiscusCore

protocol ChatListBusinessLogic
{
    func fetchChatList(request: ChatList.FetchChatList.Request)
    
}

protocol ChatListDataStore
{
    //var name: String { get set }
}

class ChatListInteractor: ChatListBusinessLogic, ChatListDataStore
{
    var presenter: ChatListPresentationLogic?
    var worker: ChatListWorker?
    //var name: String = ""
    
    // MARK: Do something
    
    func fetchChatList(request: ChatList.FetchChatList.Request) {
        QiscusCore.shared.getAllChatRooms(showParticipant: true, showRemoved: false, showEmpty: true, page: 1, limit: 100, onSuccess: { (results, meta) in
            
            self.presenter?.present(response: ChatList.FetchChatList.Response(rooms: results))
//            self.rooms = self.filterRoom(data: results)
//            self.rooms = self.self.isShowUnread ? self.filterUnreadRooms(rooms: self.rooms) ?? [] : self.rooms
//            self.rooms = self.filterSearchRooms(rooms: self.rooms, query: self.query)
//            self.viewPresenter?.didFinishLoadChat(rooms: self.rooms)
            
        }, onError: { (error) in
//            self.viewPresenter?.setEmptyData(message: "")
        })
    }
}
