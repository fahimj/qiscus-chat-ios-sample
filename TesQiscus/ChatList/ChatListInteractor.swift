//
//  ChatListInteractor.swift
//  TesQiscus
//
//  Created by Fahim Jatmiko on 12/02/20.
//  Copyright (c) 2020 Fahim. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import QiscusCore

protocol ChatListBusinessLogic
{
    func fetchChatList(request: ChatList.FetchChatList.Request)
    func createNewRoom(request: ChatList.CreateNewRoom.Request)
    
}

protocol ChatListDataStore
{
    var chatrooms: [RoomModel]? { get set }
    var newChatRoom: RoomModel? { get set }
}

class ChatListInteractor: ChatListBusinessLogic, ChatListDataStore
{
    var presenter: ChatListPresentationLogic?
    var worker: ChatListWorker?
    
    var chatrooms: [RoomModel]?
    var newChatRoom: RoomModel?
    //var name: String = ""
    
    // MARK: Do something
    func createNewRoom(request: ChatList.CreateNewRoom.Request) {
        QiscusCore.shared.chatUser(userId: request.username, onSuccess: { (room, comments) in
            self.newChatRoom = room
            self.presenter?.present(response:
                ChatList.CreateNewRoom.Response())
            
        }) { (error) in
        }
    }
    
    func fetchChatList(request: ChatList.FetchChatList.Request) {
        QiscusCore.shared.getAllChatRooms(showParticipant: true, showRemoved: false, showEmpty: true, page: 1, limit: 100, onSuccess: { (results, meta) in
            
            self.chatrooms = results
            self.presenter?.present(response: ChatList.FetchChatList.Response(rooms: results))
            
        }, onError: { (error) in
            // show error
        })
    }
    
}

extension ChatListInteractor : QiscusCoreDelegate
{
    func onRoomMessageReceived(_ room: RoomModel, message: CommentModel) {
        fetchChatList(request: ChatList.FetchChatList.Request())
    }
    
    func onRoomMessageDeleted(room: RoomModel, message: CommentModel) {
        fetchChatList(request: ChatList.FetchChatList.Request())
    }
    
    func onRoomDidChangeComment(comment: CommentModel, changeStatus status: CommentStatus) {
        fetchChatList(request: ChatList.FetchChatList.Request())
    }
    
    func onRoomMessageDelivered(message: CommentModel) {
        fetchChatList(request: ChatList.FetchChatList.Request())
    }
    
    func onRoomMessageRead(message: CommentModel) {
        fetchChatList(request: ChatList.FetchChatList.Request())
    }
    
    func onRoom(update room: RoomModel) {
        fetchChatList(request: ChatList.FetchChatList.Request())
    }
    
    func onRoom(deleted room: RoomModel) {
        fetchChatList(request: ChatList.FetchChatList.Request())
    }
    
    func gotNew(room: RoomModel) {
        fetchChatList(request: ChatList.FetchChatList.Request())
    }
    
    func onChatRoomCleared(roomId: String) {
        fetchChatList(request: ChatList.FetchChatList.Request())
    }
    
    
}
